name: CI & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint || true
      - name: Build
        run: npm run build
      - name: Test Supabase API connectivity (all key tables)
        run: |
          npx tsc scripts/test-supabase-connection.ts
          mv scripts/test-supabase-connection.js scripts/test-supabase-connection.cjs
          node -r dotenv/config scripts/test-supabase-connection.cjs
      - name: Test Supabase Auth (sign up, sign in, sign out)
        run: |
          node scripts/test-supabase-auth.cjs
      - name: Test Supabase Storage (upload/download)
        run: |
          node scripts/test-supabase-storage.cjs
      - name: Test Supabase Storage File Upload
        run: |
          node scripts/test-supabase-upload.cjs
      - name: Test Supabase Realtime (listen for changes)
        run: |
          node scripts/test-supabase-realtime.cjs
      - name: Test Supabase Row-Level Security (RLS)
        run: |
          node scripts/test-supabase-rls.cjs
      - name: Test Supabase Role-Based Access Control (RBAC)
        run: |
          node scripts/test-supabase-rbac.cjs
      - name: Test Supabase Email Verification Flow
        run: |
          node scripts/test-supabase-email-verification.cjs
      - name: Test Supabase Password Reset Flow
        run: |
          node scripts/test-supabase-password-reset.cjs
      - name: Test Supabase Edge Function (hello-world)
        run: |
          node scripts/test-supabase-edge-function.cjs
      - name: Run unit/integration tests
        run: npm test || npm run test:ci || true
      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 120

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          prod: true
